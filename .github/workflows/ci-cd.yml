name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.0
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_DATABASE: laravel_db
          MYSQL_ROOT_PASSWORD: Tn@ket321
        ports:
          - 3306:3306
        
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo_mysql, bcmath
          ini-values: post_max_size=256M, max_execution_time=300

      # Cache Composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      # Install Composer dependencies
      - name: Install Composer dependencies
        run: |
          cd fireX  # Make sure to navigate to the directory containing composer.json
          composer install --prefer-dist --no-interaction

      # Setup .env file
      - name: Setup .env file
        run: |
          cd fireX
          cp .env.example .env
          php artisan key:generate

      # Run database migrations
      - name: Run database migrations
        run: |
          cd fireX  # Navigate to the directory containing artisan
          php artisan migrate --force

      # Install Node.js dependencies and build assets
      - name: Install Node.js dependencies
        run: |
          cd fireX
          npm install
          npm run build
      
      # Python: Setup and Run Tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          cd python-service/yolov9
          ls  
          pip install -r requirements.txt
          pip install pytest pytest-mock

      - name: Run Python tests
        run: |
          cd python-service/yolov9
          pytest tests/
      
      

      # Run tests
      - name: Run Laravel tests
        run: |
          cd fireX  # Navigate to the directory containing artisan
          php artisan test

      # Deploy to DigitalOcean
      - name: Deploy to DigitalOcean
        env:
          DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          DO_SSH_PASSPHRASE: ${{ secrets.DO_SSH_PASSPHRASE }}  # Add passphrase to GitHub Secrets
        run: |
          # Set up SSH agent
          mkdir -p ~/.ssh
          echo "$DO_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 138.197.40.244 >> ~/.ssh/known_hosts

          # Start ssh-agent and add the key with the passphrase
          eval $(ssh-agent -s)
          echo "$DO_SSH_PASSPHRASE" | ssh-add ~/.ssh/id_rsa

          # Now use SSH to connect and deploy
          ssh root@138.197.40.244 << 'EOF'
            cd /var/www/FireX/fireX
            git pull origin main
            composer install --prefer-dist --no-interaction
            php artisan migrate --force
            npm install
            npm run production
            php artisan queue:restart
          EOF
